---
import 'src/styles/global.css';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import { metadata } from 'src/metadata.ts';
const { title: propsTitle, description: propsDescription } = Astro.props;

const url = Astro.site?.origin + Astro.url.pathname;
const socialImage = Astro.site?.origin + metadata.socialImage;
const title = propsTitle ? propsTitle + ' â€¢ Parker Davis' : 'Parker Davis';
const description = propsDescription ? propsDescription : metadata.description;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="generator" content={Astro.generator} />
        <link rel="canonical" href={Astro.site?.origin + Astro.url.pathname} />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <link
            rel="alternate"
            href="/feed/feed.xml"
            type="application/atom+xml"
        />
        <link rel="alternate" href="/feed/feed.json" type="application/json" />
        <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
        <meta name="description" content={description} />
        <title>{title}</title>

        <!-- Open Graph -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content={url} />
        <meta property="og:locale" content="en_US" />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:image" content={socialImage} />
        <!-- Twitter -->
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content={metadata.twitter} />
        <meta name="twitter:creator" content={metadata.twitter} />
        <meta name="twitter:url" content={url} />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={description} />
        <meta name="twitter:image" content={socialImage} />
        <!-- plausible analytics -->
        <script
            defer
            src="https://plausible.parkerdavis.dev/js/script.js"
            onload="this.setAttribute('data-domain',window.location.host)"
        ></script>
    </head>
    <body>
        <Header />
        <slot />
        <Footer />
        <script>
            const allPictures =
                document.querySelectorAll<HTMLImageElement>(
                    'img:not(.no-fade)'
                );

            allPictures.forEach((image) => {
                image.style.opacity = '0';
            });

            allPictures.forEach((image) =>
                image.addEventListener('load', (event) => {
                    const image = event.target as HTMLImageElement;
                    image.style.transition = 'opacity 1s';
                    image.style.opacity = '1';
                })
            );

            // Backup if image is loaded from the cache;
            allPictures.forEach((image) => {
                if (image.complete) {
                    image.style.transition = 'opacity 1s';
                    image.style.opacity = '1';
                }
            });
        </script>
    </body>
</html>

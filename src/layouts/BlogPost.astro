---
import Base from '@layouts/Base.astro';
import TOC from '@components/TOC.astro';
import DisplayDate from '@components/DisplayDate.astro';
import DisplayTags from '@components/DisplayTags.astro';
import LikeButton from '@components/LikeButton.svelte';
import { trimUrlPathname } from '@utils/trimUrlPathname';
import CommentSection from '@components/CommentSection.svelte';
import { db, Comments, desc } from 'astro:db';
import { eq } from 'astro:db';
import { QuailLikes, count } from 'astro:db';

const { post, prevPost, nextPost } = Astro.props;
const { headings } = await post.render();

const urlPathName = trimUrlPathname(Astro.url.pathname);
const comments = await db
    .select()
    .from(Comments)
    .where(eq(Comments.path, urlPathName))
    .orderBy(desc(Comments.date));

const [likes] = await db
    .select({ count: count() })
    .from(QuailLikes)
    .where(eq(QuailLikes.path, urlPathName));
---

<Base title={post.data.title}>
    <div class="toc-container">
        <TOC headings={headings} />
        <main>
            <article class="flow">
                <h1>{post.data.title}</h1>
                <div class="mb-8">
                    <DisplayDate date={post.data.date} format="MMMM DD, YYYY" />
                    <DisplayTags tags={post.data.tags} />
                </div>
                <slot />
            </article>
            <LikeButton client:load url={urlPathName} initCount={likes.count} />

            <div class="border-t border-b border-dashed border-textColor py-5">
                {
                    prevPost && (
                        <p>
                            Previous Post:{' '}
                            <a href={`/blog/${prevPost.slug}`}>
                                {prevPost.data.title}
                            </a>
                        </p>
                    )
                }
                {
                    nextPost && (
                        <p>
                            Next Post:{' '}
                            <a href={`/blog/${nextPost.slug}`}>
                                {nextPost.data.title}
                            </a>
                        </p>
                    )
                }
            </div>
            <CommentSection
                url={urlPathName}
                initComments={comments}
                client:load
            />
        </main>
    </div>
</Base>

<style>
    .toc-container {
        display: flex;
        align-items: flex-start;
        column-gap: 1rem;
        flex-grow: 1;
    }

    main {
        flex-shrink: 0;
    }

    article {
        margin-bottom: 2rem;
    }

    a {
        color: unset;
    }
</style>
